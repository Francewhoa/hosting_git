diff --git a/hosting_platform_git.install b/hosting_platform_git.install
index c3448a1..68c72d4 100644
--- a/hosting_platform_git.install
+++ b/hosting_platform_git.install
@@ -47,9 +47,24 @@ function hosting_platform_git_schema() {
         'not null' => TRUE,
         'default' => '',
       ),
+      'git_allow_pull_task' => array(
+        'description' => 'Whether the git-pull task can be performed on this platform.',
+        'type' => 'int',
+        'not null' => TRUE,
+        'default' => 0,
+      ),
     ),
     'primary key' => array('nid'),
   );
 
   return $schema;
 }
+
+/**
+ * Add a field for git_allow_pull_task
+ */
+function hosting_platform_git_update_6101() {
+  $ret = array();
+  db_add_field($ret, 'hosting_platform_git', 'git_allow_pull_task', array('type' => 'int', 'not null' => TRUE, 'default' => 0));
+  return $ret;
+}
diff --git a/hosting_platform_git.module b/hosting_platform_git.module
index c20191b..2cf50f1 100644
--- a/hosting_platform_git.module
+++ b/hosting_platform_git.module
@@ -10,53 +10,42 @@
  */
 function hosting_platform_git_form_alter(&$form, &$form_state, $form_id) {
   if ($form_id == 'platform_node_form') {
-    // If it's a new platform, show git form fields
-    if (is_null($form['nid']['#value'])) {
-      $form['git'] = array(
-        '#type' => 'fieldset',
-        '#tree' => TRUE,
-        '#title' => t('Deploy from Git'),
-        '#collapsible' => TRUE,
-        '#description' => t('You may deploy this platform from a Git repository. This functionality cannot be combined with a Makefile.'),
-        '#weight' => -1,
-      );
+    $form['git'] = array(
+      '#type' => 'fieldset',
+      '#tree' => TRUE,
+      '#title' => t('Deploy from Git'),
+      '#collapsible' => TRUE,
+      '#description' => t('You may deploy this platform from a Git repository. This functionality cannot be combined with a Makefile.'),
+      '#weight' => -1,
+    );
 
-      $form['git']['repo_url'] = array(
-        '#type' => 'textfield',
-        '#title' => 'Repository URL',
-        '#description' => t('The full URL that you would pass to <em>git clone</em>. Example:  git@github.com:username/project.git or https://github.com/username/project.git. Note that this repository must be accessible by the Aegir user.'),
-      );
+    $form['git']['repo_url'] = array(
+      '#type' => 'textfield',
+      '#title' => 'Repository URL',
+      '#description' => t('The full URL that you would pass to <em>git clone</em>. Example:  git@github.com:username/project.git or https://github.com/username/project.git. Note that this repository must be accessible by the Aegir user.'),
+    );
 
-      $form['git']['repo_branch'] = array(
-        '#type' => 'textfield',
-        '#title' => 'Branch or tag name',
-        '#description' => t('If a branch or tag name is not supplied, the platform will be deployed from <em>master</em>. This must match the Git branch or tag name exactly.')
-      );
-
-      $form['#validate'][] = 'hosting_platform_git_node_form_validate';
+    $form['git']['repo_branch'] = array(
+      '#type' => 'textfield',
+      '#title' => 'Branch or tag name',
+      '#description' => t('If a branch or tag name is not supplied, the platform will be deployed from <em>master</em>. This must match the Git branch or tag name exactly.')
+    );
+    // repo_url and branch are currently not editable
+    if (0 && !is_null($form['nid']['#value'])) {
+      $form['git']['repo_url']['#disabled'] = TRUE;
+      $form['git']['repo_branch']['#disabled'] = TRUE;
+      $form['git']['repo_url']['#description'] = t('Only available on node creation');
+      $form['git']['repo_branch']['#description'] = $form['git']['repo_url']['#description'];
     }
-    // Otherwise, just show what we already have.
-    else {
-      if (isset($form['#node']->git['repo_url']) && $form['#node']->git['repo_url'] != 'NOOP') {
-        $form['info'] = array(
-          '#prefix' => '<div class="clear-block" id="hosting-site-edit-info">',
-          '#suffix' => '<br /></div>',
-          '#weight' => -10,
-        );
 
-        $form['info']['git_repo_url'] = array(
-          '#type' => 'item',
-          '#title' => t('Repo URL'),
-          '#value' => check_plain($form['#node']->git['repo_url']),
-        );
+    $form['git']['git_allow_pull_task'] = array(
+      '#type' => 'checkbox',
+      '#title' => 'Allow git pull',
+      '#description' => t('Allow the use of a git pull task to update the platform'),
+      '#default_value' => $form['#node']->git['git_allow_pull_task'],
+    );
 
-        $form['info']['git_repo_branch'] = array(
-          '#type' => 'item',
-          '#title' => t('Repo branch/tag'),
-          '#value' => check_plain($form['#node']->git['repo_branch']),
-        );
-      }
-    }
+    $form['#validate'][] = 'hosting_platform_git_node_form_validate';
   }
 }
 
@@ -76,11 +65,15 @@ function hosting_platform_git_node_form_validate($form, &$form_state) {
 function hosting_platform_git_nodeapi(&$node, $op) {
   if ($node->type == 'platform') {
     switch ($op) {
+      case 'update':
+        db_query('UPDATE {hosting_platform_git} SET git_allow_pull_task=%d WHERE nid = %d', $node->git['git_allow_pull_task'], $node->nid);
+        break;
       case 'insert':
         $info = new stdClass();
         $info->nid = $node->nid;
         $info->git_repo_url = !empty($node->git['repo_url']) ? $node->git['repo_url'] : 'NOOP';
         $info->git_repo_branch = !empty($node->git['repo_branch']) ? $node->git['repo_branch'] : 'master';
+        $info->git_repo_allow_pull = !empty($node->git['git_allow_pull_task']) ? $node->git['git_allow_pull_task'] : FALSE;
         if ($node->is_new) {
           drupal_write_record('hosting_platform_git', $info);
         }
@@ -93,6 +86,7 @@ function hosting_platform_git_nodeapi(&$node, $op) {
           $node->git = array();
           $node->git['repo_url'] = $result->git_repo_url;
           $node->git['repo_branch'] = $result->git_repo_branch;
+          $node->git['git_allow_pull_task'] = $result->git_allow_pull_task;
         }
         break;
       case 'view':
@@ -114,3 +108,32 @@ function hosting_platform_git_nodeapi(&$node, $op) {
     }
   }
 }
+
+/**
+ * Implementation of hook_hosting_tasks
+ */
+function hosting_platform_git_hosting_tasks() {
+  $tasks = array();
+  $tasks['platform']['git-pull'] = array(
+    'title' => t('Git pull'),
+    'description' => t('Runs a git pull on the current platform.'),
+    'access callback' => 'hosting_platform_git_access_platform_pull',
+    'dialog' => TRUE
+  );
+
+  return $tasks;
+}
+
+function hosting_platform_git_access_platform_pull($node) {
+  if (user_access('create platform git-pull task') && isset($node->git['git_allow_pull_task'])) {
+    return $node->git['git_allow_pull_task'];
+  }
+  return TRUE;
+}
+
+/**
+ * Implementation of hook_perm
+ */
+function hosting_platform_git_perm() {
+  return array('create platform git-pull task');
+}
